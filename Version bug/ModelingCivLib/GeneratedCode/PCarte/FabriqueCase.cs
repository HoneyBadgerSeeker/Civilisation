//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
namespace PCarte
{
	using PCase;
	using PConstantes;
	using System;
    using System.Collections;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class FabriqueCase
	{
        // singleton -> unique instance de fabrique
        public static FabriqueCase INSTANCE = new FabriqueCase();

        // tableau de hash contenant les differents types de case
		private Hashtable _tabCases
		{
			get;
			set;
		}

        // permet d'obtenir une case d'un certain type
		public Case obtenirCase(int type)
		{
            Case retour;  // case que l'on va retourner

            // case non presente -> on l'ajoute
            if (!_tabCases.ContainsKey(type))
            {                
                switch(type)  // selon le type de la case
                {
                    case PConstantes.TypeCase.DESERT:
                        Console.WriteLine("iciiii");
                            retour = new Desert();
                            break;
                    case PConstantes.TypeCase.DESERT_FER:
                            retour = new Fer(new Desert());
                            break;
                    case PConstantes.TypeCase.DESERT_NOURRITURE:
                            retour = new Fruit(new Desert());
                            break;
                    case PConstantes.TypeCase.MONTAGNE:
                            retour = new Montagne();
                            break;
                    case PConstantes.TypeCase.MONTAGNE_FER:
                            retour = new Fer(new Montagne());
                            break;
                    case PConstantes.TypeCase.MONTAGNE_NOURRITURE:
                            retour = new Fruit(new Montagne());
                            break;
                    case PConstantes.TypeCase.PLAINE:
                            retour = new Plaine();
                            break;
                    case PConstantes.TypeCase.PLAINE_FER:
                            retour = new Fer(new Plaine());
                            break;
                    case PConstantes.TypeCase.PLAINE_NOURRITURE:
                            retour = new Fruit(new Plaine());
                            break;                           
                    default:
                        retour = new Plaine(); // Dans le cas d'erreur on ajoute une plaine.
                        break;
                }
                // on l'insere
                 _tabCases.Add(type, retour);
            }
            else
            {
                // case presente -> on la retourne
                retour = (Case) _tabCases[type];
            }

            return retour;
        }

        // constrcuteur de la fabrique
		private FabriqueCase()
		{
            _tabCases = new Hashtable();		
        }
	}
}

