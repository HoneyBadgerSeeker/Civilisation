//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
namespace PMonteurPartie
{
    using PPartie;
    using PCivilisation;
    using PConstantes;
    using PCarte;
    using PJoueur;
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public abstract class MonteurCreationPartieAbstraite
	{
        // partie du monteur
        protected Partie _partie
        {
            get;
            set;
        }

        // constructeur du monteur
        public MonteurCreationPartieAbstraite() {}

        // recuperation de la partie par le CreateurPartie
        public Partie recupererPartie()
        {
            return _partie;
        }

        // creer la carte de la partie
        public void creerCarte(int tailleCarte)
        {
            if (tailleCarte == TypeCarte.PETITE)
            {
                _partie._carte = new Petite(_partie._liste_joueurs.Count);
            }
            else if (tailleCarte == TypeCarte.NORMALE)
            {
                _partie._carte = new Normale(_partie._liste_joueurs.Count);
            }
        }

        // ajout des joueurs a la partie
        public void ajouterJoueurs(List<Joueur> liste)
        {
            if (liste != null)
            {
                _partie._liste_joueurs = liste;
            }
        }

        // constructeur de la partie
		public Partie creerNouvellePartie(int taille, List<Joueur> liste)
		{
            _partie = new Partie();
            initialiserTour();
            creerCarte(taille);
            ajouterJoueurs(liste);
            initialiserJoueurCourant();
            return _partie;
		}

        // permet d'initialiser le numero du tour a 0
        public void initialiserTour()
        {
            _partie._tour = 0;
        }

        // choix du joueur qui commence la partie en premier 
		public abstract void initialiserJoueurCourant();

	}
}

